import re

def assess_password_strength(password):
    # Defining the criteria
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    number_criteria = bool(re.search(r'\d', password))
    special_char_criteria = bool(re.search(r'[!@#$%^&*(),.?":{}|<>]', password))

    # Feedback messages
    feedback = []
    if not length_criteria:
        feedback.append("Password should be at least 8 characters long.")
    if not uppercase_criteria:
        feedback.append("Password should include at least one uppercase letter.")
    if not lowercase_criteria:
        feedback.append("Password should include at least one lowercase letter.")
    if not number_criteria:
        feedback.append("Password should include at least one number.")
    if not special_char_criteria:
        feedback.append("Password should include at least one special character (!@#$%^&*).")

    # Determining password strength
    if all([length_criteria, uppercase_criteria, lowercase_criteria, number_criteria, special_char_criteria]):
        return "Strong password!", []
    elif len(feedback) <= 2:
        return "Moderate password.", feedback
    else:
        return "Weak password.", feedback

#usage
password = input("Enter a password to assess: ")
strength, feedback = assess_password_strength(password)
print("\nPassword Strength:", strength)
for msg in feedback:
    print("-", msg)

